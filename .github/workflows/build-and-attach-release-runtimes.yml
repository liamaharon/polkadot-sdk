name: Build and Attach Runtimes to Release

on:
  release:
    types:
      - created

jobs:
  build_and_upload:
    strategy:
      matrix:
        runtime:
          # TODO: Add parachain runtimes
          - { name: westend, package: westend-runtime, path: polkadot/runtime/westend }
          - { name: rococo, package: rococo-runtime, path: polkadot/runtime/rococo }
        build_config:
          # Release build has disabled logging and no dev features
          - { type: on-chain-release, opts: --features on-chain-release-build } 
          # Debug build has logging and the try-runtime feature
          - { type: debug-build, opts: --features try-runtime }

    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build ${{ matrix.runtime.name }} ${{ matrix.build_config.type }}
      id: srtool_build
      uses: chevdor/srtool-actions@v0.8.0
      env:
        BUILD_OPTS: ${{ matrix.build_config.opts }}
      with:
        chain: ${{ matrix.runtime.name }}
        package: ${{ matrix.runtime.package }}
        runtime_dir: ${{ matrix.runtime.path }}
        profile: "production"

    - name: Build Summary
      run: |
        echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ matrix.runtime.name }}-srtool-digest.json
        cat ${{ matrix.runtime.name }}-srtool-digest.json
        echo "Runtime location: ${{ steps.srtool_build.outputs.wasm }}"

    - name: Set up paths and names
      id: setup
      run: |
        echo "PACKAGE_NAME=${{ matrix.runtime.package }}" >> $GITHUB_ENV
        RUNTIME_BLOB_NAME=$(echo $PACKAGE_NAME | sed 's/-/_/g').compact.compressed.wasm
        echo "RUNTIME_BLOB_NAME=$RUNTIME_BLOB_NAME" >> $GITHUB_ENV
        PREFIX=${{ matrix.build_config.type == 'debug-build' && 'DEBUG_BUILD__' || '' }}
        echo "PREFIX=$PREFIX" >> $GITHUB_ENV
        echo "ASSET_PATH=./${{ matrix.runtime.path }}/target/srtool/production/wbuild/$PACKAGE_NAME/$RUNTIME_BLOB_NAME" >> $GITHUB_ENV
        echo "ASSET_NAME=$PREFIX$RUNTIME_BLOB_NAME" >> $GITHUB_ENV

    - name: Upload Runtime to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.ASSET_PATH }}
        asset_name: ${{ env.ASSET_NAME }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}